{% trans_default_domain 'HBMDatagridBundle' %}

{% import '@HBMDatagrid/macros.html.twig' as dg %}


{% if datagrid.bootstrap['version'] == 'v4' %}
  {% set classesGroup = 'my-1 mr-sm-2 ' ~ dg.classesAndSize(datagrid, 'input-group') %}
  {% set classesAddon = 'input-group-prepend' %}
{% else %}
  {% set classesGroup = 'input-group input-group-sm' %}
  {% set classesAddon = 'input-group-addon' %}
{% endif %}


<div class="{{ classesGroup }}">
  <span class="{{ classesAddon }}"><span class="input-group-text">{{ dg.trans(searchField['label'], transDomain) }}</span></span>
  <select class="form-control" name="{{ searchKey }}" title="{{ dg.trans(searchField['label'], transDomain) }}">
    <option></option>
    {% set keys = datagrid.menu.searchValue(searchKey) %}
    {% if searchField['values'] is defined %}
      {% for key, value in searchField['values'] %}
        <option value="{{ key }}" {% if (keys is iterable and key in keys) or (keys is not iterable and key == keys) %}selected{% endif %}>{{ value }}</option>
      {% endfor %}
    {% endif %}
    {% if searchField['optgroups'] is defined %}
      {% for optgroupLabel, optgroupValues in searchField['optgroups'] %}
        <optgroup label="{{ optgroupLabel }}">
          {% for key, value in optgroupValues %}
            <option value="{{ key }}" {% if (keys is iterable and key in keys) or (keys is not iterable and key == keys) %}selected{% endif %}>{{ value }}</option>
          {% endfor %}
        </optgroup>
      {% endfor %}
    {% endif %}
  </select>
</div>
